// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(cuid())
  username  String   @unique
  email     String   @unique
  firstName String?
  lastName  String
  password  String   // In production, this would be hashed
  role      Role     @default(STUDENT)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  progress   Progress[]
  exercises  Exercise[]

  @@map("users")
}

model Chapter {
  id          String @id
  title       String
  emoji       String
  order       Int    @unique
  markdownUrl String
  pythonUrl   String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  progress  Progress[]
  exercises Exercise[]

  @@map("chapters")
}

model Progress {
  id          String    @id @default(cuid())
  userId      String
  chapterId   String
  completed   Boolean   @default(false)
  completedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // Relations
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  chapter Chapter @relation(fields: [chapterId], references: [id], onDelete: Cascade)

  // Ensure one progress record per user per chapter
  @@unique([userId, chapterId])
  @@map("progress")
}

model Exercise {
  id        String   @id @default(cuid())
  userId    String
  chapterId String
  title     String
  code      String
  isCorrect Boolean  @default(false)
  attempts  Int      @default(1)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  chapter Chapter @relation(fields: [chapterId], references: [id], onDelete: Cascade)

  @@map("exercises")
}

enum Role {
  ADMIN
  INSTRUCTOR
  STUDENT
}